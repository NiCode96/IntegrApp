/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package VistaController;


import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import Model.Producto;
import java.util.List;
import Controller.ControllerInventario;
import javax.swing.JOptionPane;

/**
 *
 * @author Cakri
 */
public class InventarioView extends javax.swing.JInternalFrame {

    
    
    DefaultTableModel model = new DefaultTableModel();
    
    
    public InventarioView() {
        initComponents();
        
        model.addColumn("ID Producto");
        model.addColumn("Nombre Producto");
        model.addColumn("Descripcion");
        model.addColumn("Precio");
        model.addColumn("Cantidad Stock");
        model.addColumn("Categoria");
        model.addColumn("Provedor");
        llenarTabla();
        
    }
    
    
    public void llenarTabla(){ //metodo con el que se llena la tabla para el usuario, utilizando el metodo para buscar producto de la clase producto 
    tblInventario.setModel(model);
    model.setRowCount(0);
    
    
        try {
            ArrayList<Producto> tablaProductos = Producto.buscarTablaProducto();
            
            for (Producto tablaProducto : tablaProductos) {
               Object objeto[] = new Object[7];
               
                objeto[0] = tablaProducto.getId_producto();
                objeto[1] = tablaProducto.getNombreProducto();
                objeto[2] = tablaProducto.getDescripcion();
                objeto[3] = tablaProducto.getPrecio();
                objeto[4] = tablaProducto.getCantidadStock();
                objeto[5] = tablaProducto.getCategoria();
                objeto[6] = tablaProducto.getProveedor();
                
                model.addRow(objeto);
               
                                                        
            }
            
            
            
        } catch (Exception e) {
        }
    
    
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblInventario = new javax.swing.JTable();
        cbxMayorPrecio = new javax.swing.JCheckBox();
        cbxMenorPrecio = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        cbxMayorStock = new javax.swing.JCheckBox();
        cbxMenorStock = new javax.swing.JCheckBox();
        cbxTodos = new javax.swing.JCheckBox();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Inventario");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Inventario de productos");

        tblInventario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Nombre", "", "Title 4", "Title 5", "Title 6"
            }
        ));
        jScrollPane2.setViewportView(tblInventario);

        cbxMayorPrecio.setText("Mayor precio");
        cbxMayorPrecio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxMayorPrecioActionPerformed(evt);
            }
        });

        cbxMenorPrecio.setText("Menor Precio");
        cbxMenorPrecio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxMenorPrecioActionPerformed(evt);
            }
        });

        jLabel2.setText("Ordenar por:");

        cbxMayorStock.setText("Mayor stock");
        cbxMayorStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxMayorStockActionPerformed(evt);
            }
        });

        cbxMenorStock.setText("Menor stock");
        cbxMenorStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxMenorStockActionPerformed(evt);
            }
        });

        cbxTodos.setText("Todos");
        cbxTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxTodosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(199, 199, 199)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 627, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(21, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cbxTodos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbxMayorPrecio)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbxMenorPrecio)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbxMayorStock)
                        .addGap(18, 18, 18)
                        .addComponent(cbxMenorStock)
                        .addGap(38, 38, 38))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cbxMayorPrecio)
                    .addComponent(cbxMenorPrecio)
                    .addComponent(cbxMayorStock)
                    .addComponent(cbxMenorStock)
                    .addComponent(cbxTodos))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbxMayorPrecioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxMayorPrecioActionPerformed
        List<Producto> productos = ControllerInventario.mostrarMaxStocks();
        
        if(productos != null && !productos.isEmpty()){
            //llenar tabla con productos
            llenarTabla(productos);
        }else{
            JOptionPane.showMessageDialog(null,"Productos no encontrados");
        }
    }//GEN-LAST:event_cbxMayorPrecioActionPerformed

    private void cbxTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxTodosActionPerformed
        List<Producto> productos = ControllerInventario.mostrarTodo();
        
        if(productos != null && !productos.isEmpty()){
            //Llenar tabla con los productos
            llenarTabla(productos);
        }else{
            JOptionPane.showMessageDialog(null, "Productos no encontrados");
        }
    }//GEN-LAST:event_cbxTodosActionPerformed

    private void cbxMenorPrecioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxMenorPrecioActionPerformed
        List<Producto> productos = ControllerInventario.mostrarMinStocks();
        
        if(productos != null && !productos.isEmpty()){
            //Llenar tabla con los productos
            llenarTabla(productos);
        }else{
            JOptionPane.showMessageDialog(null,"Productos no encontrados");
        }
    }//GEN-LAST:event_cbxMenorPrecioActionPerformed

    private void cbxMayorStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxMayorStockActionPerformed
        List<Producto> productos = ControllerInventario.mostrarMaxStocks();
        
        if(productos != null && !productos.isEmpty()){
            //Llenar tabla con los productos
            llenarTabla(productos);
        }else{
            JOptionPane.showMessageDialog(null,"Productos no encontrados");
        }
    }//GEN-LAST:event_cbxMayorStockActionPerformed

    private void cbxMenorStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxMenorStockActionPerformed
        List<Producto> productos = ControllerInventario.mostrarMinStocks();
        
        if(productos != null && !productos.isEmpty()){
            //Llenar tabla con los productos
            llenarTabla(productos);
        }else{
            JOptionPane.showMessageDialog(null,"Productos no encontrados");
        }
    }//GEN-LAST:event_cbxMenorStockActionPerformed
    
    public void llenarTabla(List<Producto> productos){
        //Obtener modelo de la tabla para manipular columnas y filas
        DefaultTableModel modelo = (DefaultTableModel) tblInventario.getModel();
        
        //Limpiar datos existentes en la tabla
        modelo.setRowCount(0);
        
        //Llenar los datos desde la arrayList
        for(Producto producto : productos){
            modelo.addRow(new Object[]{
                producto.getId_producto(),
                producto.getNombreProducto(),
                producto.getPrecio(),
                producto.getCantidadStock(),
                producto.getCategoria(),
                producto.getProveedor(),
                producto.getDescripcion()
            });
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox cbxMayorPrecio;
    private javax.swing.JCheckBox cbxMayorStock;
    private javax.swing.JCheckBox cbxMenorPrecio;
    private javax.swing.JCheckBox cbxMenorStock;
    private javax.swing.JCheckBox cbxTodos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblInventario;
    // End of variables declaration//GEN-END:variables
}
